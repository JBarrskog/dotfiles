[init]
	defaultBranch = main
[include]
	# A local gitconfig, outside of version control.
	# If the file doesn't exist it is silently ignored
	path = ~/.gitconfig-local
[core]
	editor = nvim
[alias]
	# List all git-aliases
	la = "!git config -l | grep alias | cut -c 7-"

	co = checkout
	cob = checkout -b
	s = status --short
	ss = status
	br = branch -v

	l = log --graph --pretty=format:'%Cred%h%Creset %C(bold blue)%an%C(reset) - %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

	# Show what I did today
	day = "!sh -c 'git log --reverse --no-merges --branches=* --date=local --after=\"yesterday 11:59PM\" --author=\"`git config --get user.name`\"'"

	# show the committers in the last 100 commits, sorted by who has commited the most
	review = "!git log --no-merges --pretty=%an | head -n 100 | sort | uniq -c | sort -nr"

	# show number of commits per contributer, sorted
	count = shortlog -sn
	
	# order files by number of commits, ascending
	# Written by Corey Haines
	# Scriptified by Gary Bernhardt
	# Show churn for a time range:
	#   $ git churn --since='1 month ago'
	churn = "!f() { git log --all -M -C --name-only --format='format:' \"$@\" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print \"count\tfile\"} {print $1 \"\t\" $2}' | sort -g; }; f"

        # show all deleted files in the repo
        deleted = "!git log --diff-filter=D --summary | grep delete"

        undo = reset --soft HEAD~1

	# Pruning, general maintenance, removing *everything* untracked!, clearing stash
        cleanup = "!git remote prune origin && git gc && git clean -df && git stash clear"

        # Removing local branches no longer available on origin
        forget = "!git fetch -p origin && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"

        # 'diff grep'
        dg = "!sh -c 'git ls-files -m | grep $1 | xargs git diff' -"
        # diff grep changes between two commits
        dgc = "!sh -c 'git ls-files | grep $1 | xargs git diff $2 $3 -- ' -"
        # 'checkout grep'
        cg = "!sh -c 'git ls-files -m | grep $1 | xargs git checkout ' -"
        # add grep
        ag = "!sh -c 'git ls-files -m -o --exclude-standard | grep $1 | xargs git add --all' -"
        # add all
        aa = !git ls-files -d | xargs git rm && git ls-files -m -o --exclude-standard | xargs git add
        # remove grep - Remove found files that are NOT under version control
        rg = "!sh -c 'git ls-files --others --exclude-standard | grep $1 | xargs rm' -"
[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = auto
[color "branch"]
    current = green bold
    local = green
    remote = red bold
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = green bold
    changed = yellow bold
    untracked = red
[color "sh"]
    branch = yellow
